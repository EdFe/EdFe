import json
import kivy
from kivy.config import Config
from collections import Counter
from itertools import combinations
import random
from typing import Self
from kivy.app import App
from kivy.properties import ColorProperty
from kivy.uix.boxlayout import BoxLayout
from kivy.uix.label import Label
from kivy.uix.button import Button
from kivy.uix.widget import Widget
from kivy.properties import ObjectProperty
from kivy.lang import Builder
from kivy.core.window import Window


#Builder.load_file('elf.kv')

class MyLayout():
    pass

class MyApp(App):
    def build(self):
        Window.clearcolor = (0.52,0.62,0.76,1)
        layout = BoxLayout(orientation='vertical')
        self.label = Label(text="Pressione o bot√£o para gerar um bilhete vencedor", font_size = 32, color= 'green', 
                           italic = True,  bold = True, size_hint_x = None, width = 72, pos_hint={'center_x':0.5, 'center_y':0.5})
        button = Button (text="Gerar Bilhete Vencedor", font_size= 32, color= 'orange', italic = True, bold = True, size_hint= (.5, .1), pos=(50, 10), pos_hint={'center_x':0.5, 'center_y':0.5})
        button.bind(on_press=self.display_winning_ticket)
        layout.add_widget(self.label)
        layout.add_widget(button)
        return layout
    
    def display_winning_ticket(self, instance):
        # Load the JSON data from the file
        try:
            with open('database1.json', 'r') as file:
                mass_cashRecords = json.load(file)
            
            # Extract the 'data' field (winning numbers) from each record
            winning_numbers = [record["ganhador"] for record in mass_cashRecords[2]["data"]]
            
            # Count occurrences of each number in all winning tickets
            all_numbers = [number for numbers in winning_numbers for number in numbers.split()]
            number_counts = Counter(all_numbers)
            
            # Retrieve the top 5 most frequent numbers
            top_numbers = [number[0] for number in number_counts.most_common(15737)]
            
            # Shuffle the top numbers
            random.shuffle(top_numbers)
            
            # Generate combinations of top 5 numbers (choosing 5 from the shuffled top numbers)
            combinations_list = list(combinations(top_numbers, 5))
            
            # Display a random combination as a potential winning ticket
            winning_ticket = " ".join(combinations_list[0])
            self.label.text = f"Bilhete vencedor potencial: {winning_ticket}"
        
        except Exception as e:
            self.label.text = f"Erro ao gerar bilhete: {e}"

if __name__ == '__main__':
    MyApp().run()

